/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cminus.node;

import Cminus.analysis.*;

@SuppressWarnings("nls")
public final class ABDeclarationList extends PDeclarationList
{
    private PDeclaration _declaration_;

    public ABDeclarationList()
    {
        // Constructor
    }

    public ABDeclarationList(
        @SuppressWarnings("hiding") PDeclaration _declaration_)
    {
        // Constructor
        setDeclaration(_declaration_);

    }

    @Override
    public Object clone()
    {
        return new ABDeclarationList(
            cloneNode(this._declaration_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABDeclarationList(this);
    }

    public PDeclaration getDeclaration()
    {
        return this._declaration_;
    }

    public void setDeclaration(PDeclaration node)
    {
        if(this._declaration_ != null)
        {
            this._declaration_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._declaration_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._declaration_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._declaration_ == child)
        {
            this._declaration_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._declaration_ == oldChild)
        {
            setDeclaration((PDeclaration) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
