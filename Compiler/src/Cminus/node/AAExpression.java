/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cminus.node;

import Cminus.analysis.*;

@SuppressWarnings("nls")
public final class AAExpression extends PExpression
{
    private PVariable _variable_;
    private TAttribution _attribution_;
    private PExp _exp_;

    public AAExpression()
    {
        // Constructor
    }

    public AAExpression(
        @SuppressWarnings("hiding") PVariable _variable_,
        @SuppressWarnings("hiding") TAttribution _attribution_,
        @SuppressWarnings("hiding") PExp _exp_)
    {
        // Constructor
        setVariable(_variable_);

        setAttribution(_attribution_);

        setExp(_exp_);

    }

    @Override
    public Object clone()
    {
        return new AAExpression(
            cloneNode(this._variable_),
            cloneNode(this._attribution_),
            cloneNode(this._exp_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAExpression(this);
    }

    public PVariable getVariable()
    {
        return this._variable_;
    }

    public void setVariable(PVariable node)
    {
        if(this._variable_ != null)
        {
            this._variable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variable_ = node;
    }

    public TAttribution getAttribution()
    {
        return this._attribution_;
    }

    public void setAttribution(TAttribution node)
    {
        if(this._attribution_ != null)
        {
            this._attribution_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attribution_ = node;
    }

    public PExp getExp()
    {
        return this._exp_;
    }

    public void setExp(PExp node)
    {
        if(this._exp_ != null)
        {
            this._exp_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._exp_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._variable_)
            + toString(this._attribution_)
            + toString(this._exp_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._variable_ == child)
        {
            this._variable_ = null;
            return;
        }

        if(this._attribution_ == child)
        {
            this._attribution_ = null;
            return;
        }

        if(this._exp_ == child)
        {
            this._exp_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._variable_ == oldChild)
        {
            setVariable((PVariable) newChild);
            return;
        }

        if(this._attribution_ == oldChild)
        {
            setAttribution((TAttribution) newChild);
            return;
        }

        if(this._exp_ == oldChild)
        {
            setExp((PExp) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
