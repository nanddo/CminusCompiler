/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cminus.node;

import Cminus.analysis.*;

@SuppressWarnings("nls")
public final class AAArgs extends PArgs
{
    private PArgsList _argsList_;

    public AAArgs()
    {
        // Constructor
    }

    public AAArgs(
        @SuppressWarnings("hiding") PArgsList _argsList_)
    {
        // Constructor
        setArgsList(_argsList_);

    }

    @Override
    public Object clone()
    {
        return new AAArgs(
            cloneNode(this._argsList_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAArgs(this);
    }

    public PArgsList getArgsList()
    {
        return this._argsList_;
    }

    public void setArgsList(PArgsList node)
    {
        if(this._argsList_ != null)
        {
            this._argsList_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._argsList_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._argsList_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._argsList_ == child)
        {
            this._argsList_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._argsList_ == oldChild)
        {
            setArgsList((PArgsList) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
