/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cminus.node;

import Cminus.analysis.*;

@SuppressWarnings("nls")
public final class AAMult extends PMult
{
    private TAsterisk _asterisk_;

    public AAMult()
    {
        // Constructor
    }

    public AAMult(
        @SuppressWarnings("hiding") TAsterisk _asterisk_)
    {
        // Constructor
        setAsterisk(_asterisk_);

    }

    @Override
    public Object clone()
    {
        return new AAMult(
            cloneNode(this._asterisk_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAAMult(this);
    }

    public TAsterisk getAsterisk()
    {
        return this._asterisk_;
    }

    public void setAsterisk(TAsterisk node)
    {
        if(this._asterisk_ != null)
        {
            this._asterisk_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._asterisk_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._asterisk_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._asterisk_ == child)
        {
            this._asterisk_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._asterisk_ == oldChild)
        {
            setAsterisk((TAsterisk) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
