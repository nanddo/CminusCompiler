/* This file was generated by SableCC (http://www.sablecc.org/). */

package Cminus.node;

import Cminus.analysis.*;

@SuppressWarnings("nls")
public final class ABAttributionStatement extends PAttributionStatement
{
    private PVariable _variable_;
    private TAttribution _attribution_;
    private TStringValue _stringValue_;
    private TSemicolon _semicolon_;

    public ABAttributionStatement()
    {
        // Constructor
    }

    public ABAttributionStatement(
        @SuppressWarnings("hiding") PVariable _variable_,
        @SuppressWarnings("hiding") TAttribution _attribution_,
        @SuppressWarnings("hiding") TStringValue _stringValue_,
        @SuppressWarnings("hiding") TSemicolon _semicolon_)
    {
        // Constructor
        setVariable(_variable_);

        setAttribution(_attribution_);

        setStringValue(_stringValue_);

        setSemicolon(_semicolon_);

    }

    @Override
    public Object clone()
    {
        return new ABAttributionStatement(
            cloneNode(this._variable_),
            cloneNode(this._attribution_),
            cloneNode(this._stringValue_),
            cloneNode(this._semicolon_));
    }

    @Override
    public void apply(Switch sw)
    {
        ((Analysis) sw).caseABAttributionStatement(this);
    }

    public PVariable getVariable()
    {
        return this._variable_;
    }

    public void setVariable(PVariable node)
    {
        if(this._variable_ != null)
        {
            this._variable_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._variable_ = node;
    }

    public TAttribution getAttribution()
    {
        return this._attribution_;
    }

    public void setAttribution(TAttribution node)
    {
        if(this._attribution_ != null)
        {
            this._attribution_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._attribution_ = node;
    }

    public TStringValue getStringValue()
    {
        return this._stringValue_;
    }

    public void setStringValue(TStringValue node)
    {
        if(this._stringValue_ != null)
        {
            this._stringValue_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._stringValue_ = node;
    }

    public TSemicolon getSemicolon()
    {
        return this._semicolon_;
    }

    public void setSemicolon(TSemicolon node)
    {
        if(this._semicolon_ != null)
        {
            this._semicolon_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        this._semicolon_ = node;
    }

    @Override
    public String toString()
    {
        return ""
            + toString(this._variable_)
            + toString(this._attribution_)
            + toString(this._stringValue_)
            + toString(this._semicolon_);
    }

    @Override
    void removeChild(@SuppressWarnings("unused") Node child)
    {
        // Remove child
        if(this._variable_ == child)
        {
            this._variable_ = null;
            return;
        }

        if(this._attribution_ == child)
        {
            this._attribution_ = null;
            return;
        }

        if(this._stringValue_ == child)
        {
            this._stringValue_ = null;
            return;
        }

        if(this._semicolon_ == child)
        {
            this._semicolon_ = null;
            return;
        }

        throw new RuntimeException("Not a child.");
    }

    @Override
    void replaceChild(@SuppressWarnings("unused") Node oldChild, @SuppressWarnings("unused") Node newChild)
    {
        // Replace child
        if(this._variable_ == oldChild)
        {
            setVariable((PVariable) newChild);
            return;
        }

        if(this._attribution_ == oldChild)
        {
            setAttribution((TAttribution) newChild);
            return;
        }

        if(this._stringValue_ == oldChild)
        {
            setStringValue((TStringValue) newChild);
            return;
        }

        if(this._semicolon_ == oldChild)
        {
            setSemicolon((TSemicolon) newChild);
            return;
        }

        throw new RuntimeException("Not a child.");
    }
}
